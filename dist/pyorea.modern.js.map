{"version":3,"file":"pyorea.modern.js","sources":["../src/pyorea.js"],"sourcesContent":["const defaultDeps = { react: \"18\", \"react-dom\": \"18\" };\n\nfunction delay(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nasync function hidePreloader() {\n  const preloader = document.querySelector(\".preloader\");\n  if (preloader) {\n    preloader.style.transition = \"opacity 0.4s ease\";\n    preloader.style.opacity = 1;\n    preloader.style.opacity = 0;\n    await delay(410);\n    preloader.style.display = \"none\";\n  }\n}\n\nasync function loadDeps() {\n  const allDeps = { ...defaultDeps, ...(window.npm_deps || {}) };\n  const depsLoadPromises = Promise.all(\n    Object.keys(allDeps).map((key) => {\n      const item = allDeps[key];\n      let version = \"\";\n      let name = item?.name || key.replace(/-/g, \"_\");\n      if (typeof item === \"string\") {\n        version = allDeps[key];\n      } else if (item?.version) {\n        version = allDeps[key]?.version;\n      }\n      return import(\n        `https://esm.sh/${key}${version ? `@${version}` : \"\"}`\n      ).then((module) => ({ module, name }));\n    })\n  );\n  const [moduleEntries] = await Promise.all([\n    depsLoadPromises,\n    import(\"https://cdn.jsdelivr.net/pyodide/v0.21.3/full/pyodide.js\"),\n  ]);\n\n  return moduleEntries;\n}\n\nconst libraryPythonCode = `\nimport inspect\nimport types\nimport sys\nfrom pyodide.ffi import create_proxy, to_js\nfrom js import window, document, Object\nimport react as React\nimport react_dom as ReactDOM\n\nflatten = lambda *n: (e for a in n\n                      for e in (flatten(*a) if isinstance(a, (tuple, list)) else (a,)))\n\n\n_h = React.createElement\n\n\ndef helper(type, *args):\n    props = None\n    children = []\n    if args and isinstance(args[0], dict):\n        props = to_js(args[0], dict_converter=Object.fromEntries)\n        if args[1:]:\n            children = flatten(args[1:])\n    elif args:\n        children = flatten(args)\n    return _h(type, props, *children)\n\n\nclass HyperScript(type):\n    def __getattribute__(self, __name):\n        def _helper(*args):\n            return helper(__name, *args)\n        return _helper\n\n    def __call__(self, type, *args):\n        return helper(type, *args)\n\n\nclass h(metaclass=HyperScript):\n    pass\n\n\ndef Component(component_fn):\n\n    def inner_fn(props, _opt):\n        func_params = (inspect.signature(component_fn).parameters)\n        return component_fn(props) if func_params else component_fn()\n\n    return create_proxy(inner_fn)\n\n\ndef render(app, selector):\n    root = ReactDOM.createRoot(document.querySelector(selector))\n    root.render(app)\n\n\n\npyorea = types.ModuleType('pyorea')\npyorea.h = h\npyorea.Component = Component\npyorea.render = render\npyorea.React = React\nsys.modules['pyorea'] = pyorea\n\n`;\n\nasync function run() {\n  const moduleEntries = await loadDeps();\n  const pyodide = await loadPyodide({ fullStdLib: true });\n\n  for (const { module, name } of moduleEntries) {\n    pyodide.registerJsModule(name, module);\n  }\n  const scripts = [];\n  document\n    .querySelectorAll(`script[type=\"text/python\"]`)\n    .forEach((x, index) => {\n      if (x.src) {\n        scripts.push(\n          fetch(x.src)\n            .then((x) => x.text())\n            .then((text) => ({ text, name: x.src }))\n        );\n      } else {\n        scripts.push({\n          text: x.textContent,\n          name: `inline script #${index + 1}`,\n        });\n      }\n    });\n  const scriptContents = await Promise.all(scripts);\n  await hidePreloader();\n  pyodide.runPython(libraryPythonCode);\n  for (const { text, name } of scriptContents) {\n    try {\n      pyodide.runPython(text);\n    } catch (error) {\n      console.error(`Error in file ${name}`, error);\n    }\n  }\n}\n\nfunction main() {\n  window.addEventListener(\"DOMContentLoaded\", () => {\n    run().catch((e) => {\n      console.warn(\"load script error\", e);\n    });\n  });\n}\n\nmain();\n"],"names":["defaultDeps","react","window","addEventListener","async","moduleEntries","allDeps","npm_deps","depsLoadPromises","Promise","all","Object","keys","map","key","item","version","name","replace","_allDeps$key","import","then","module","loadDeps","pyodide","loadPyodide","fullStdLib","registerJsModule","scripts","document","querySelectorAll","forEach","x","index","push","src","fetch","text","textContent","scriptContents","preloader","querySelector","style","transition","opacity","resolve","setTimeout","display","hidePreloader","runPython","error","console","run","catch","e","warn"],"mappings":"oOAAA,MAAMA,EAAc,CAAEC,MAAO,KAAM,YAAa,MAiJ9CC,OAAOC,iBAAiB,mBAAoB,MArC9CC,iBACE,MAAmBC,QA5FrBD,iBACE,MAAME,EAAeN,EAAAA,CAAAA,EAAAA,EAAiBE,OAAOK,UAAY,CAAE,GACrCC,EAAGC,QAAQC,IAC/BC,OAAOC,KAAKN,GAASO,IAAKC,IACxB,MAAUC,EAAGT,EAAQQ,GACrB,IAAWE,EAAG,GACVC,GAAW,MAAJF,OAAI,EAAJA,EAAME,OAAQH,EAAII,QAAQ,KAAM,KAC3C,GAAoB,iBAALH,EACbC,EAAUV,EAAQQ,QACb,GAAQ,MAAJC,GAAAA,EAAMC,QAAS,CACxBA,IAAAA,EAAAA,EAAU,OAAAV,EAAAA,EAAQQ,SAAR,EAAAK,EAAcH,OAC1B,CACA,OAAOI,OACJ,kBAAiBN,IAAME,EAAW,IAAGA,IAAY,MAClDK,KAAMC,IAAM,CAAQA,SAAQL,SAAO,KAGlCZ,SAAuBI,QAAQC,IAAI,CACxCF,EACAY,OAAO,8DAGT,OACFf,CAAA,CAqE8BkB,GACfC,QAASC,YAAY,CAAEC,YAAY,IAEhD,IAAK,MAAMJ,OAAEA,EAAML,KAAEA,KAAUZ,EAC7BmB,EAAQG,iBAAiBV,EAAMK,GAEjC,MAAaM,EAAG,GAChBC,SACGC,iBAAkB,8BAClBC,QAAQ,CAACC,EAAGC,KAETL,EAAQM,KADNF,EAAEG,IAEFC,MAAMJ,EAAEG,KACLd,KAAMW,GAAMA,EAAEK,QACdhB,KAAMgB,IAAU,CAAEA,OAAMpB,KAAMe,EAAEG,OAGxB,CACXE,KAAML,EAAEM,YACRrB,KAAO,kBAAiBgB,EAAQ,KAEpC,GAEJ,MAAMM,QAA8B9B,QAACC,IAAIkB,SA9H3CxB,iBACE,MAAMoC,EAAYX,SAASY,cAAc,cACrCD,IACFA,EAAUE,MAAMC,WAAa,oBAC7BH,EAAUE,MAAME,QAAU,EAC1BJ,EAAUE,MAAME,QAAU,QARjBnC,IAAAA,QAASoC,GAAYC,WAAWD,EAS7B,MACZL,EAAUE,MAAMK,QAAU,OAE9B,CAsHQC,GACNxB,EAAQyB,UA5FiB,u9CA6FzB,IAAK,MAAMZ,KAAEA,EAAIpB,KAAEA,KAAUsB,EAC3B,IACEf,EAAQyB,UAAUZ,EAGpB,CAFE,MAAOa,GACPC,QAAQD,MAAO,iBAAgBjC,IAAQiC,EACzC,CAEJ,EAIIE,GAAMC,MAAOC,IACXH,QAAQI,KAAK,oBAAqBD,EAAC,EACpC"}